defaults:
  - data: yyc
  - model/image_encoder: resnet_fpn
  - training
  - _self_

model:
  name: orienternet
  latent_dim: 128
  matching_dim: 8
  z_max: 32
  x_max: 32
  pixel_per_meter: ${data.pixel_per_meter}
  num_scale_bins: 33
  num_rotations: 64
  image_encoder:
    backbone:
      encoder: resnet101
  map_encoder:
    embedding_dim: 16
    output_dim: ${..matching_dim}
    num_classes: ${data.num_classes}
    backbone:
      encoder: vgg19
      pretrained: false
      output_scales: [0]
      num_downsample: 3
      decoder: [128, 64, 64]
      padding: replicate
    unary_prior: false
  bev_net:
    num_blocks: 4
    latent_dim: ${..latent_dim}
    output_dim: ${..matching_dim}
    confidence: true

data:
  name: yyc
  paths: 
    data_dir: "./datasets/YYC"
    osm_dir: "/home/kevinmeng/workspace/mappedin/VPS/OrienterNet/yyc_osms"
    combined_geojson_path: "/home/kevinmeng/workspace/mappedin/VPS/Mappedin_VPS_Data-20250127T163206Z-001/Mappedin_VPS_Data/YYC_VPS/combined-output.geojson"
    photos_dir: "/home/kevinmeng/workspace/mappedin/VPS/Mappedin_VPS_Data-20250127T163206Z-001/Mappedin_VPS_Data/YYC_VPS/photos"
    mvf_dir: "/home/kevinmeng/workspace/mappedin/VPS/MVF/YYC"
  scenes:
    - f_64ff43abbf8c6fef25f86282
    - f_64ff43e17107d168de589c1a
    - f_64ff44007107d168de589c1b
    - f_6509bfcef7649384963d5949
    - f_6509bfee66c66bc61ee6b49c
    - f_6509c038f7649384963d594a
  split: image_splits.json
  loading:
    train:
      batch_size: 4 # was 12 but OOM
      num_workers: ${.batch_size}
    val:
      batch_size: ${..train.batch_size}
      num_workers: ${.batch_size}
  # map data
  num_classes:
    nodes: 1
    ways: 1
  pixel_per_meter: 2
  crop_size_meters: 64
  max_init_error: 48
  add_map_mask: true
  # preprocessing
  resize_image: 512
  pad_to_square: true
  rectify_pitch: true
  augmentation:
    rot90: true
    flip: false # was true
    image: {apply: true}

train:
  experiment:
    name: ???
    gpus: 1
    seed: 0
  training:
    lr: 1e-3 # 1e-4
    lr_scheduler: null
    finetune_from_checkpoint: null
    trainer:
      max_epochs: 1000
      check_val_every_n_epoch: 1
      limit_val_batches: 1000
      devices: ${experiment.gpus}
    checkpointing:
      monitor: "loss/total/val"
      save_top_k: 5
      mode: "min"
  hydra:
    job:
      name: ${experiment.name}
      chdir: false

clearml:
  project_name: "OrienterNet"
  task_name: "orienternet_training"
  output_uri: true
  dataset_id: e5bce8143ec6423cac891a31f123bb9a